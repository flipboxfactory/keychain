<?php
/**
 * Created by PhpStorm.
 * User: dsmrt
 * Date: 1/12/18
 * Time: 9:33 PM
 */

namespace flipbox\keychain\records;


use flipbox\ember\records\ActiveRecord;
use flipbox\ember\records\traits\StateAttribute;

/**
 * Class KeyChainRecord
 * @package flipbox\keychain\records
 * @property string $certificate
 * @property string $key
 */
class KeyChainRecord extends ActiveRecord
{

    use StateAttribute;

    /**
     * The table alias
     */
    const TABLE_ALIAS = 'keychain';

    /**
     * @inheritdoc
     */
    public function beforeSave($insert)
    {

        /**
         * Encrypt data at rest
         */
        $this->key = base64_encode(\Craft::$app->getSecurity()->encryptByKey(
            $this->key,
            \Craft::$app->getConfig()->getGeneral()->securityKey
        ));
        $this->certificate = base64_encode(\Craft::$app->getSecurity()->encryptByKey(
            $this->certificate,
            \Craft::$app->getConfig()->getGeneral()->securityKey
        ));

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * Call to fetch key using the getter decrypts
     * @return bool|string
     */
    public function getKey()
    {
        return \Craft::$app->getSecurity()->decryptByKey(
            base64_decode($this->key),
            \Craft::$app->getConfig()->getGeneral()->securityKey
        );
    }

    /**
     * Call to fetch certificate using the getter decrypts
     * @return bool|string
     */
    public function getCertificate()
    {
        return \Craft::$app->getSecurity()->decryptByKey(
            base64_decode($this->certificate),
            \Craft::$app->getConfig()->getGeneral()->securityKey
        );
    }
}